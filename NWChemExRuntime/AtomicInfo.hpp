#pragma once
#include <LibChemist/Atom.hpp>
#include <string>
#include <map>
#include <vector>

/** @file Declares structures containing basic experimental data.
 *
 *  @warning This file is automatically generated via generate_atomicinfo.py.
 *    DO NOT EDIT!!!
 */

namespace NWXRuntime {
namespace detail_ {

/** @brief Struct to hold reference data related to a particular isotope.
 *
 *  Data for this class was filled using generate_atomicinfo.py by parsing a
 *  collection of NIST and IUPAC data files located in the directory 
 *  NWChemExRuntime/reference_data/physical_data.
 */
struct IsotopeData {
    ///Isotope number (Z + # neutrons)
    std::size_t isonum;

    ///Mass of the isotope in Daltons
    double mass;

    ///Natural abundance of isotope (out of 1)
    double abundance;
};//End IsotopeData

/** @brief Struct to hold reference data related to a particular atom.
 *
 *  Data for this class was filled using generate_atomicinfo.py by parsing a
 *  collection of NIST and IUPAC data files located in the directory 
 *  NWChemExRuntime/reference_data/physical_data.
 */
struct AtomicInfo {
    ///Map of the default properties of the current atom
    std::unordered_map<LibChemist::AtomProperty, double> props;
    ///Isotope data for this element
    std::unordered_map<std::size_t,IsotopeData> isotopes;
};//End AtomicInfo class

///Convenience converter from atomic symbol to atomic number
extern const std::map<std::string, std::size_t> sym2Z_;

///Map from atomic number to known data for element
extern const std::map<std::size_t, AtomicInfo> atomic_data_;

}}//End namespaces
