name: Build and test with dev

on:
  pull_request:
    branches:
      - dev

jobs:
  docker-file-changes:
    runs-on: ubuntu-latest
    outputs:
      build_dockfile: ${{ steps.changes.outputs.bdfile }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          bdfile:
            - 'build.Dockerfile'

  update-building-image:
    runs-on: ubuntu-latest
    needs: docker-file-changes
    if: ${{ needs.docker-file-changes.outputs.build_dockfile == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Update building image
        run: |
          docker pull ghcr.io/nwchemex-ci-test/build_pluginplay:stable
          docker build -t ghcr.io/nwchemex-ci-test/build_pluginplay:test \
          --cache-from ghcr.io/nwchemex-ci-test/build_pluginplay:stable \
          -f build.Dockerfile . --build-arg parallelzone_rtag=stable \
          --build-arg utilities_rtag=stable --build-arg parallelzone_btag=stable
          docker push ghcr.io/nwchemex-ci-test/build_${filename}:test

  build_update_check:
    runs-on: ubuntu-latest
    needs: docker-file-changes
    outputs:
      bi_check: ${{ steps.building-image-update.outputs.tag }}
    steps:
      - name: Check if the building image has been updated
        id: building-image-update
        run: |
          if [[ ${{ needs.docker-file-changes.outputs.build_dockfile == 'true' }} ]]; then
             tag="test"
          else
             tag="stable"
          fi
          echo "$tag" >> "$GITHUB_OUTPUT"

  build-with-gcc:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test-dev_tmpl.yaml@master
    needs: [update-building-image, build_update_check]
    with: 
      repo: PluginPlay
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: false
      install: false
      build_image_tag: ${{ needs.build_update_check.outputs.bi_check }}
    secrets: inherit 
    #CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
    #DOCKER_PAT: {{ secrets.DOCKER_PAT }}

  merge-pr-to-dev:
    runs-on: ubuntu-latest
    needs: build-with-gcc
    if: always() && (needs.build-with-gcc.result == 'success')
    steps:
      - name: merge pr to dev
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.DOCKER_PAT }}"
          MERGE_LABELS: ""

  Integration_test:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test-dev_tmpl.yaml@master
    needs: merge-pr-to-dev
    if: always() && (needs.merge-pr-to-dev.result == 'success')
    with:
      repo: PluginPlay
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: true
      install: true
      build_image_tag: test
      ref: dev
    secrets: inherit

# Update other repos
  Update-repo_dispatch:
    needs: Integration_test
    if: always() && (needs.Integration_test.result == 'success')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repos: [SimDE]
    steps:
      - uses: NWChemEx-CI-test/.github/actions/repo_dispatch@master
        with:
          to_repo: ${{ matrix.repos }}
          type: build_update
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
          from_repo: PluginPlay
          initial_repo: PluginPlay
