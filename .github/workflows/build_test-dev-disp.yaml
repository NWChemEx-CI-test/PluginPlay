name: Build and test with dev disp
# Build and test with dev for dependent repo changes
on:
  repository_dispatch:
    types: build_update

jobs:
  update-building-image:
          # cannot have a general workflow to update the building image since it is
          # specific to a repo
          # TODO
          # even build_test-dev.yaml should be modified
    runs-on: ubuntu-latest
    steps:
      - name: Get the initial repo name in lowcase
        id: irepo
        run: |
          i_repo=${{ github.event.client_payload.initial_repo }}
          i_repo=${i_repo,,}
          #echo "::set-env repo_name=i_repo::${i_repo}"
          echo "i_repo=${i_repo}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PAT }}
      # we may have a double updating issue here
      - name: Utilities updated
        if: ${{ steps.irepo.outputs.i_repo == 'utilities' }}
        run: |
          docker pull ghcr.io/nwchemex-ci-test/build_pluginplay:stable
          docker build -t ghcr.io/nwchemex-ci-test/build_pluginplay:test \
          --cache-from ghcr.io/nwchemex-ci-test/build_pluginplay:stable \
          -f build.Dockerfile . --build-arg parallelzone_rtag=stable \
          --build-arg utilities_rtag=test --build-arg parallelzone_btag=stable
          docker push ghcr.io/nwchemex-ci-test/build_pluginplay:test
      - name: ParallelZone updated
        if: ${{ steps.irepo.outputs.i_repo == 'parallelzone' }}
        run: |
          docker pull ghcr.io/nwchemex-ci-test/build_pluginplay:stable
          docker build -t ghcr.io/nwchemex-ci-test/build_pluginplay:test \
          --cache-from ghcr.io/nwchemex-ci-test/build_pluginplay:stable \
          -f build.Dockerfile . --build-arg parallelzone_rtag=test \
          --build-arg utilities_rtag=test --build-arg parallelzone_btag=test
          docker push ghcr.io/nwchemex-ci-test/build_pluginplay:test

  build-with-gcc:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test-dev_tmpl.yaml@master
    needs: update-building-image
    with: 
      repo: PluginPlay
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: false
      install: false
      build_image_tag: test
    secrets: inherit 
    #CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
    #DOCKER_PAT: {{ secrets.DOCKER_PAT }}

    #merge-pr-to-dev:
    #  runs-on: ubuntu-latest
    #  needs: build-with-gcc
    #  if: always() && (needs.build-with-gcc.result == 'success')
    #  steps:
    #    - name: merge pr to dev
    #      uses: "pascalgn/automerge-action@v0.15.6"
    #      env:
    #        GITHUB_TOKEN: "${{ secrets.DOCKER_PAT }}"
    #        MERGE_LABELS: ""

  Integration_test:
    uses: NWChemEx-CI-test/.github/.github/workflows/build_test-dev_tmpl.yaml@master
    needs: build-with-gcc
    if: always() && (needs.build-with-gcc.result == 'success')
    with:
      repo: PluginPlay
      clang-build: false
      gcc-build: true
      ninja_build: true
      test: true
      integration_test: true
      install: true
      build_image_tag: test
      ref: dev
    secrets: inherit

# Update other repos
  Update-repo_dispatch:
    needs: Integration_test
    if: always() && (needs.Integration_test.result == 'success')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repos: [SimDE]
    steps:
      - uses: NWChemEx-CI-test/.github/actions/repo_dispatch@master
        with:
          to_repo: ${{ matrix.repos }}
          type: build_update
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
          from_repo: PluginPlay
          initial_repo: PluginPlay
